@startuml
skinparam monochrome true
skinparam classAttributeIconSize 0
scale 2

namespace py2puml {
}
namespace puml_generator {
  class PUML_Generator {
    +dest
    +config
    +sourcename
    -__init__(self, dest, config=None)
    +start_file(self, sourcename)
    +end_file(self, sourcename=None)
    +output(self, *args)
    +header(self)
    +footer(self)
    +do_file(self, srcfile, errormsg=None)
    +print_classinfo(self, classinfo)
    +print_codeinfo(self, codeinfo)
    +arglist(self, fdef, ismethod=False)
  }

  PUML_Generator <|-- PUML_Generator_NS
  class PUML_Generator_NS {
    +root
    +namespaces
    -__init__(self, dest, root, config=None)
    +depth(self)
    +start_file(self, sourcename)
    +pop_ns(self, count=1)
    +push_ns(self, name)
    +output(self, *args)
    +footer(self)
  }

}
namespace code_info {
  class CodeInfo {
    +variables
    +functions
    -__init__(self)
    +add_variable(self, name)
    +add_function(self, node)
    +visibility(name)
  }

  CodeInfo <|-- ClassInfo
  class ClassInfo {
    +classname
    +bases
    +members
    -__init__(self, node)
    +classvars(self)
    +methods(self)
    +add_classvar(self, name)
    +add_member(self, name)
    +add_method(self, node)
    +done(self, context)
  }

}
namespace ast_visitor {
  ast.NodeVisitor <|-- TreeVisitor
  class TreeVisitor {
    +srcfile
    +context
    +classinfo
    +globals
    +constructor
    +tree
    -__init__(self, srcfile, context=None)
    +parse(self, errormsg=None)
    +visit_tree(self)
    +visit_ClassDef(self, node)
    +visit_FunctionDef(self, node)
    +visit_Assign(self, node)
  }

}
@enduml
